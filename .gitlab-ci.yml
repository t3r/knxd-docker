docker-build:
  # Use the official docker image.
  image: docker:cli
  stage: build
  services:
    - docker:dind
  variables:
    DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --use --name multiarch --driver docker-container
    - docker buildx inspect --bootstrap

  # All branches are tagged with $DOCKER_IMAGE_NAME (defaults to commit ref slug)
  # Default branch is also tagged with `latest`
  script:
    - |
      TAGS="--tag $DOCKERHUB_USERNAME/knxd:latest --tag $DOCKERHUB_USERNAME/knxd:$CI_COMMIT_SHA"
      if [ "$CI_COMMIT_TAG" != "" ]; then
        TAGS="$TAGS --tag $DOCKERHUB_USERNAME/knxd:$CI_COMMIT_TAG"
      fi
      docker buildx build \
        --platform linux/amd64,linux/arm64,linux/arm/v7 \
        --pull \
        --push \
        $TAGS \
        .
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:latest"
        docker push "$CI_REGISTRY_IMAGE:latest"
      fi
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
